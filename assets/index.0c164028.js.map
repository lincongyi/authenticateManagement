{"version":3,"file":"index.0c164028.js","sources":["../../src/pages/MyApps/AuthenticationData/components/index.ts","../../src/pages/MyApps/AuthenticationData/components/AmountChart/index.tsx","../../src/pages/MyApps/AuthenticationData/components/PercentageChart/index.tsx","../../src/pages/MyApps/AuthenticationData/components/DistributionChart/index.tsx","../../src/pages/MyApps/AuthenticationData/index.tsx"],"sourcesContent":["import * as echarts from 'echarts'\r\n\r\nconst echartInstances: echarts.ECharts[] = []\r\n\r\nconst echartOnResize = (instance: echarts.ECharts) => {\r\n  echartInstances.push(instance)\r\n  window.onresize = () => {\r\n    echartInstances.forEach(echart => echart.resize())\r\n  }\r\n}\r\n\r\nexport { echartOnResize }\r\n","import React, { useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport { echartOnResize } from '../index'\r\n\r\nlet lineChart: echarts.EChartsType | null\r\nconst AmountChart = ({ chartData }: { chartData: TLineChart }) => {\r\n  type EChartsOption = echarts.EChartsOption\r\n  const option: EChartsOption = {\r\n    xAxis: {\r\n      type: 'category',\r\n      boundaryGap: false,\r\n      data: chartData.xAxis\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        data: chartData.yAxis,\r\n        type: 'line',\r\n        areaStyle: {}\r\n      }\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!lineChart) {\r\n      const amount = document.getElementById('amount')\r\n      if (!amount) return\r\n      lineChart = echarts.init(amount)\r\n    }\r\n    lineChart.setOption(option)\r\n    lineChart.resize()\r\n    echartOnResize(lineChart)\r\n    return () => {\r\n      lineChart = null\r\n      window.onresize = () => {}\r\n    }\r\n  }, [option])\r\n\r\n  return <div id='amount' style={{ height: 352 }}></div>\r\n}\r\n\r\nexport default React.memo(AmountChart)\r\n","import React, { useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport type { TPercentage } from '@mock/myApp'\r\nimport { echartOnResize } from '../index'\r\n\r\nlet barChart: echarts.EChartsType | null\r\nconst PercentageChart = ({ chartData }: { chartData: TPercentage }) => {\r\n  type EChartsOption = echarts.EChartsOption\r\n  const option: EChartsOption = {\r\n    xAxis: {\r\n      type: 'category',\r\n      data: chartData.xAxis\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        data: chartData.yAxis,\r\n        type: 'bar',\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n          color: 'rgba(180, 180, 180, 0.2)'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!barChart) {\r\n      const percentage = document.getElementById('percentage')\r\n      if (!percentage) return\r\n      barChart = echarts.init(percentage)\r\n    }\r\n    barChart.setOption(option)\r\n    barChart.resize()\r\n    echartOnResize(barChart)\r\n    return () => {\r\n      barChart = null\r\n      window.onresize = () => {}\r\n    }\r\n  }, [option])\r\n\r\n  return <div id='percentage' style={{ height: 352 }}></div>\r\n}\r\n\r\nexport default React.memo(PercentageChart)\r\n","import React, { useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport { echartOnResize } from '../index'\r\n\r\nlet barChart: echarts.EChartsType | null\r\nconst DistributionChart = ({ chartData }: { chartData: TLineChart }) => {\r\n  type EChartsOption = echarts.EChartsOption\r\n  const option: EChartsOption = {\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'shadow'\r\n      }\r\n    },\r\n    xAxis: {\r\n      type: 'value',\r\n      boundaryGap: [0, 0.01]\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: chartData.yAxis,\r\n      axisLabel: {\r\n        show: true,\r\n        interval: 0,\r\n        formatter: function (params) {\r\n          let newLabel = ''\r\n          const paramsNameNumber = params.length\r\n          const provideNumber = 5 // 一行显示几个字\r\n          if (paramsNameNumber > provideNumber) {\r\n            const rowNumber = Math.ceil(paramsNameNumber / provideNumber)\r\n            for (let index = 0; index < rowNumber; index++) {\r\n              let tempStr = ''\r\n              const start = index * provideNumber\r\n              const end = start + provideNumber\r\n              if (index === rowNumber - 1) {\r\n                tempStr = params.substring(start, paramsNameNumber)\r\n              } else {\r\n                tempStr = params.substring(start, end) + '\\n'\r\n              }\r\n              newLabel += tempStr\r\n            }\r\n          } else {\r\n            newLabel = params\r\n          }\r\n          return newLabel\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        data: chartData.xAxis\r\n      }\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!barChart) {\r\n      const distribution = document.getElementById('distribution')\r\n      if (!distribution) return\r\n      barChart = echarts.init(distribution)\r\n    }\r\n    barChart.setOption(option)\r\n    barChart.resize()\r\n    echartOnResize(barChart)\r\n    return () => {\r\n      barChart = null\r\n      window.onresize = () => {}\r\n    }\r\n  }, [option])\r\n\r\n  return <div id='distribution' style={{ height: 352 }}></div>\r\n}\r\n\r\nexport default React.memo(DistributionChart)\r\n","import React, { useEffect, useState } from 'react'\r\nimport style from './index.module.scss'\r\nimport { Col, Row, DatePicker, ConfigProvider, Card } from 'antd'\r\nimport dayjs from 'dayjs'\r\nimport type { Dayjs } from 'dayjs'\r\nimport 'dayjs/locale/zh-cn'\r\nimport locale from 'antd/locale/zh_CN'\r\nimport { rangePresets, disabledDate, dateFormat } from '@utils/date'\r\nimport {\r\n  getAmount,\r\n  getPercentage,\r\n  getDistribution,\r\n  getDistributionList\r\n} from '@mock/myApp'\r\nimport type { TPercentage, TCard } from '@mock/myApp'\r\nimport AmountChart from './components/AmountChart'\r\nimport PercentageChart from './components/PercentageChart'\r\nimport DistributionChart from './components/DistributionChart'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst AuthenticationData = () => {\r\n  const [dateRange, setDateRange] = useState<string[]>([\r\n    dayjs().add(-7, 'd').format(dateFormat),\r\n    dayjs().format(dateFormat)\r\n  ])\r\n\r\n  /**\r\n   * 日期范围发生变化的回调\r\n   */\r\n  const onRangeChange = (\r\n    dates: null | (Dayjs | null)[],\r\n    dateStrings: string[]\r\n  ) => {\r\n    setDateRange(dateStrings)\r\n  }\r\n\r\n  /**\r\n   * 关闭日期选择器的回调\r\n   */\r\n  const onOpenChange = (open: boolean) => {\r\n    if (!open) {\r\n      renderAmountChart()\r\n      renderPercentageChart()\r\n      renderDistributionChart()\r\n      renderDistributionCard()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 认证总量\r\n   */\r\n  const [amount, setAmount] = useState<TLineChart & { total: number }>()\r\n\r\n  /**\r\n   * 渲染图表-认证总量\r\n   */\r\n  const renderAmountChart = async () => {\r\n    const { data } = await getAmount({\r\n      startDate: dateRange[0],\r\n      endDate: dateRange[1]\r\n    })\r\n    setAmount(data)\r\n  }\r\n\r\n  /**\r\n   * 认证成功率\r\n   */\r\n  const [percentage, setPercentage] = useState<TPercentage>()\r\n\r\n  /**\r\n   * 渲染图表-认证成功率\r\n   */\r\n  const renderPercentageChart = async () => {\r\n    const { data } = await getPercentage({\r\n      startDate: dateRange[0],\r\n      endDate: dateRange[1]\r\n    })\r\n    setPercentage(data)\r\n  }\r\n\r\n  /**\r\n   * 各接入方式认证量分布\r\n   */\r\n  const [distribution, setDistribution] = useState<TLineChart>()\r\n\r\n  /**\r\n   * 渲染图表-各接入方式认证量分布\r\n   */\r\n  const renderDistributionChart = async () => {\r\n    const { data } = await getDistribution({\r\n      startDate: dateRange[0],\r\n      endDate: dateRange[1]\r\n    })\r\n    setDistribution(data)\r\n  }\r\n\r\n  /**\r\n   * 各证件类型认证量分布\r\n   */\r\n  const [distributionList, setDistributionList] = useState<TCard[]>()\r\n\r\n  /**\r\n   * 渲染card-各证件类型认证量分布\r\n   */\r\n  const renderDistributionCard = async () => {\r\n    const { data } = await getDistributionList({\r\n      startDate: dateRange[0],\r\n      endDate: dateRange[1]\r\n    })\r\n    setDistributionList(data!.list)\r\n  }\r\n\r\n  useEffect(() => {\r\n    renderAmountChart()\r\n    renderPercentageChart()\r\n    renderDistributionChart()\r\n    renderDistributionCard()\r\n  }, [])\r\n\r\n  return (\r\n    <Row gutter={[20, 20]}>\r\n      <Col span={24}>\r\n        <ConfigProvider locale={locale}>\r\n          <RangePicker\r\n            defaultValue={[dayjs(dateRange[0]), dayjs(dateRange[1])]}\r\n            presets={rangePresets}\r\n            disabledDate={disabledDate}\r\n            onChange={onRangeChange}\r\n            onOpenChange={onOpenChange}\r\n          />\r\n        </ConfigProvider>\r\n      </Col>\r\n      {amount && (\r\n        <Col span={12}>\r\n          <Card\r\n            title={\r\n              <div className={style.title}>\r\n                <span className={style['decoration-line']}></span>认证总量：\r\n                <span className={style.amount}>{amount.total}</span>\r\n              </div>\r\n            }\r\n          >\r\n            <AmountChart chartData={amount} />\r\n          </Card>\r\n        </Col>\r\n      )}\r\n\r\n      {percentage && (\r\n        <Col span={12}>\r\n          <Card\r\n            title={\r\n              <div className={`${style.title} ${style['space-between']}`}>\r\n                <div className={`${style['left-side']} ${style.success}`}>\r\n                  <span className={style['decoration-square']}></span>\r\n                  认证成功率：\r\n                  <span className={style.percentage}>\r\n                    {percentage.success}%\r\n                  </span>\r\n                </div>\r\n                <div className={`${style['right-side']} ${style.fail}`}>\r\n                  <span className={style['decoration-square']}></span>\r\n                  认证失败率：\r\n                  <span className={style.percentage}>{percentage.fail}%</span>\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            <PercentageChart chartData={percentage} />\r\n          </Card>\r\n        </Col>\r\n      )}\r\n      <Col span={12}>\r\n        <Card\r\n          style={{ height: 457 }}\r\n          title={\r\n            <div className={style.title}>\r\n              <span className={style['decoration-square']}></span>\r\n              各证件类型认证量分布：\r\n            </div>\r\n          }\r\n        >\r\n          <div className={style['card-wrap']}>\r\n            {distributionList &&\r\n              distributionList.map((item: TCard, index: number) => (\r\n                <div\r\n                  className={`${style['card-content']} ${\r\n                    style['card0' + (index + 1)]\r\n                  }`}\r\n                  key={index}\r\n                >\r\n                  <div className={`${style.count} font-primary-color`}>\r\n                    {item.count}\r\n                  </div>\r\n                  <div className={style.description}>{item.description}</div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n      {distribution && (\r\n        <Col span={12}>\r\n          <Card\r\n            title={\r\n              <div className={style.title}>\r\n                <span className={style['decoration-square']}></span>\r\n                各接入方式认证量分布：\r\n              </div>\r\n            }\r\n          >\r\n            <DistributionChart chartData={distribution} />\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default AuthenticationData\r\n"],"names":["echartInstances","echartOnResize","instance","echart","lineChart","AmountChart","chartData","option","xAxis","type","boundaryGap","data","yAxis","series","areaStyle","useEffect","amount","document","getElementById","echarts","setOption","resize","window","onresize","height","AmountChart$1","React","memo","barChart","PercentageChart","showBackground","backgroundStyle","color","percentage","PercentageChart$1","DistributionChart","tooltip","trigger","axisPointer","axisLabel","show","interval","formatter","params","newLabel","paramsNameNumber","length","provideNumber","rowNumber","Math","ceil","index","tempStr","start","end","substring","distribution","DistributionChart$1","RangePicker","DatePicker","AuthenticationData","dateRange","setDateRange","useState","dayjs","add","format","dateFormat","onRangeChange","dates","dateStrings","onOpenChange","open","renderAmountChart","renderPercentageChart","renderDistributionChart","renderDistributionCard","setAmount","getAmount","startDate","endDate","setPercentage","getPercentage","setDistribution","getDistribution","distributionList","setDistributionList","getDistributionList","list","Row","_jsx","Col","ConfigProvider","locale","rangePresets","disabledDate","Card","style","title","total","_jsxs","success","fail","map","item","count","description"],"mappings":"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"}