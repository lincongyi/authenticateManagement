{"version":3,"file":"index.60c9acbf.js","sources":["../../src/pages/MyAccount/CompanySettings/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport style from './index.module.scss'\r\nimport { Button, Form, Input, Result, Space, Upload, message } from 'antd'\r\nimport { PlusOutlined, EditOutlined } from '@ant-design/icons'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport UpdatePhoneModal from './components/UpdatePhoneModal'\r\nimport UpdateEmailModal from './components/UpdateEmailModal'\r\nimport Area from '@components/Area'\r\nimport type { UploadRequestOption } from 'rc-upload/lib/interface'\r\nimport type { RcFile } from 'antd/es/upload/interface'\r\nimport { getBase64, imgBeforeUpload } from '@utils/index'\r\nimport { getProcessByKey } from '@api/index'\r\nimport { applyUpdateCompanyInfo, currentCompanyInfo } from '@api/myAccount'\r\n\r\nconst CompanySettings = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 12 }\r\n  }\r\n\r\n  /* eslint-disable no-template-curly-in-string */\r\n  const validateMessages = {\r\n    required: '请输入${label}'\r\n  }\r\n  /* eslint-disable no-template-curly-in-string */\r\n\r\n  const [process, setProcess] = useState<TProcess>({\r\n    taskId: '',\r\n    state: -1,\r\n    processInstanceId: '',\r\n    starter: '',\r\n    comment: ''\r\n  })\r\n  const [companyInfo, setCompanyInfo] = useState<TCompanyInfo>() // 单位信息\r\n  useEffect(() => {\r\n    // 初始化表单数据\r\n    ;(async () => {\r\n      const { data: currentInfo } = await currentCompanyInfo()\r\n\r\n      const { data } = await getProcessByKey({\r\n        userId: currentInfo!.accountNumber,\r\n        key: 'UPDATE_COMPANY_INFO'\r\n      })\r\n      // 如果当前任务返回空 or 驳回状态，即可走提交申请流程，否则当前申请审批在审核中，不可重复提交申请\r\n      form.setFieldsValue(currentInfo)\r\n      if (currentInfo!.areaList) {\r\n        form.setFieldValue('areaCode', currentInfo!.areaList[0].code)\r\n      }\r\n      setCompanyInfo(currentInfo)\r\n      setCertificateFile(\r\n        `data:image/png;base64,${currentInfo!.certificatePhoto}`\r\n      )\r\n      if (data) {\r\n        const { state, processInstanceId, starter, comment } = data.instanceInfo\r\n        setProcess({\r\n          taskId: data.taskId,\r\n          state,\r\n          processInstanceId,\r\n          starter,\r\n          comment\r\n        })\r\n      }\r\n    })()\r\n  }, [])\r\n\r\n  // 修改管理员手机号模态框\r\n  const [updatePhoneModalOpen, setUpdatePhoneModalOpen] = useState(false)\r\n  /**\r\n   * 修改管理员手机号\r\n   */\r\n  const updatePhone = () => {\r\n    setUpdatePhoneModalOpen(true)\r\n  }\r\n\r\n  // 修改管理员邮箱模态框\r\n  const [updateEmailModalOpen, setUpdateEmailModalOpen] = useState(false)\r\n  /**\r\n   * 修改管理员邮箱\r\n   */\r\n  const updateEmail = () => {\r\n    setUpdateEmailModalOpen(true)\r\n  }\r\n\r\n  const [certificateFile, setCertificateFile] = useState('')\r\n\r\n  /**\r\n   * 覆盖默认的上传行为\r\n   */\r\n  const customRequest = (options: UploadRequestOption) => {\r\n    new Promise((resolve: (value: string) => void) => {\r\n      getBase64(options.file as RcFile, url => {\r\n        resolve(url)\r\n      })\r\n    }).then(url => {\r\n      const imageBase64: string = url.substring(url.indexOf('base64,') + 7)\r\n      setCertificateFile(url)\r\n      form.setFieldValue('certificateFile', imageBase64)\r\n    })\r\n  }\r\n\r\n  const navigate = useNavigate()\r\n\r\n  /**\r\n   * 返回\r\n   */\r\n  const onBack = () => navigate(-1)\r\n\r\n  /**\r\n   * 提交数据\r\n   */\r\n  const onFinish = async (values: TCompanyInfo & { adminName: string }) => {\r\n    if (!companyInfo) return\r\n    const { userId, adminPhone, adminEmail } = companyInfo\r\n    const {\r\n      adminName,\r\n      companyName,\r\n      companyShortName,\r\n      certificateNum,\r\n      areaCode\r\n    } = values\r\n    const certificatePhoto = certificateFile.substring(\r\n      certificateFile.indexOf('base64,') + 7\r\n    )\r\n\r\n    const { retMessage } = await applyUpdateCompanyInfo({\r\n      userId,\r\n      companyName,\r\n      companyShortName,\r\n      adminName,\r\n      adminPhone,\r\n      adminEmail,\r\n      certificateNum,\r\n      certificatePhoto,\r\n      areaCode\r\n    })\r\n    message.success({\r\n      content: retMessage,\r\n      duration: 2,\r\n      onClose () {\r\n        navigate(-1)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {process!.state === 1 ? (\r\n        <Result\r\n          title='申请审核中，请稍后...'\r\n          extra={\r\n            <Button type='primary' key='console' onClick={() => navigate(-1)}>\r\n              返回\r\n            </Button>\r\n          }\r\n        />\r\n      ) : (\r\n        <>\r\n          {process!.state === 2 && (\r\n            <Result\r\n              title={`${process.comment}，请重新确认信息，再提交申请`}\r\n              status='error'\r\n            />\r\n          )}\r\n          <Form\r\n            form={form}\r\n            name='settings'\r\n            {...layout}\r\n            colon={false}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            validateMessages={validateMessages}\r\n            autoComplete='off'\r\n          >\r\n            <Form.Item\r\n              label='单位名称'\r\n              name='companyName'\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input showCount maxLength={20} />\r\n            </Form.Item>\r\n            <Form.Item name='companyShortName' label='单位简称'>\r\n              <Input showCount maxLength={10} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='adminName'\r\n              label='单位管理员姓名'\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input showCount maxLength={20} />\r\n            </Form.Item>\r\n            <Form.Item label='管理员手机号' required>\r\n              <>\r\n                {companyInfo?.adminPhone}\r\n                <Button\r\n                  type='text'\r\n                  className={style['update-btn']}\r\n                  icon={<EditOutlined />}\r\n                  onClick={updatePhone}\r\n                >\r\n                  修改\r\n                </Button>\r\n              </>\r\n            </Form.Item>\r\n            <Form.Item label='管理员邮箱' required>\r\n              <>\r\n                {companyInfo?.adminEmail}\r\n                <Button\r\n                  type='text'\r\n                  className={style['update-btn']}\r\n                  icon={<EditOutlined />}\r\n                  onClick={updateEmail}\r\n                >\r\n                  修改\r\n                </Button>\r\n              </>\r\n            </Form.Item>\r\n            <Form.Item name='certificateNum' label='统一信用代码'>\r\n              <Input showCount maxLength={20} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='certificateFile'\r\n              label='信用代码证书'\r\n              valuePropName='certificateFile'\r\n            >\r\n              <Upload\r\n                listType='picture-card'\r\n                maxCount={1}\r\n                showUploadList={false}\r\n                beforeUpload={imgBeforeUpload}\r\n                customRequest={customRequest}\r\n              >\r\n                {certificateFile ? (\r\n                  <img\r\n                    src={certificateFile}\r\n                    alt='avatar'\r\n                    style={{ maxWidth: '100%', maxHeight: '100%' }}\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    <PlusOutlined />\r\n                    <div style={{ marginTop: 8 }}>选择图片</div>\r\n                  </div>\r\n                )}\r\n              </Upload>\r\n            </Form.Item>\r\n            {companyInfo && (\r\n              <Form.Item name='areaCode' label='接入地区'>\r\n                <Area\r\n                  callback={(code: number) =>\r\n                    form.setFieldValue('areaCode', code)\r\n                  }\r\n                  destinationList={companyInfo.areaList}\r\n                />\r\n              </Form.Item>\r\n            )}\r\n\r\n            <Form.Item wrapperCol={{ offset: 6, span: 12 }}>\r\n              <Space>\r\n                <Button onClick={onBack}>返回</Button>\r\n                <Button type='primary' htmlType='submit'>\r\n                  提交申请\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </>\r\n      )}\r\n      {companyInfo?.adminPhone && (\r\n        <UpdatePhoneModal\r\n          open={updatePhoneModalOpen}\r\n          setOpen={setUpdatePhoneModalOpen}\r\n          companyInfo={companyInfo}\r\n          callback={(phone: string) =>\r\n            setCompanyInfo({ ...companyInfo, ...{ adminPhone: phone } })\r\n          }\r\n        />\r\n      )}\r\n\r\n      {companyInfo?.adminEmail && (\r\n        <UpdateEmailModal\r\n          open={updateEmailModalOpen}\r\n          setOpen={setUpdateEmailModalOpen}\r\n          companyInfo={companyInfo}\r\n          callback={(email: string) =>\r\n            setCompanyInfo({ ...companyInfo, ...{ adminEmail: email } })\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompanySettings\r\n"],"names":["CompanySettings","form","Form","useForm","layout","labelCol","span","wrapperCol","validateMessages","required","process","setProcess","useState","taskId","state","processInstanceId","starter","comment","companyInfo","setCompanyInfo","useEffect","data","currentInfo","currentCompanyInfo","getProcessByKey","userId","accountNumber","key","setFieldsValue","areaList","setFieldValue","code","setCertificateFile","certificatePhoto","instanceInfo","updatePhoneModalOpen","setUpdatePhoneModalOpen","updatePhone","updateEmailModalOpen","setUpdateEmailModalOpen","updateEmail","certificateFile","customRequest","options","Promise","resolve","file","url","then","imageBase64","substring","indexOf","navigate","useNavigate","onBack","onFinish","values","adminPhone","adminEmail","adminName","companyName","companyShortName","certificateNum","areaCode","retMessage","applyUpdateCompanyInfo","message","success","content","duration","onClose","onFinishFailed","errorInfo","log","_Fragment","Result","Button","_jsxs","_jsx","Input","style","EditOutlined","Upload","imgBeforeUpload","maxWidth","maxHeight","PlusOutlined","marginTop","Area","offset","Space","UpdatePhoneModal","phone","UpdateEmailModal","email"],"mappings":"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"}