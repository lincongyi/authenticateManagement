{"version":3,"file":"myApp.b40d9fe2.js","sources":["../../src/mock/myApp.ts"],"sourcesContent":["import { request } from '@utils/request'\r\nimport Mock from 'mockjs'\r\nconst baseUrl = 'https://mock.presstime.cn/mock/64424800fd89695a4d49ffa7'\r\n\r\nconst mockData = Mock.mock({\r\n  ret: true,\r\n  retCode: 0,\r\n  retMessage: '获取参数成功',\r\n  data: {\r\n    list: [\r\n      { description: '第二代居民身份证', count: '@integer(100, 500)' },\r\n      { description: '港澳居民来往内地通行证', count: '@integer(100, 500)' },\r\n      { description: '台湾居民来往大陆通行证', count: '@integer(100, 500)' },\r\n      { description: '港澳台居民居住证', count: '@integer(100, 500)' },\r\n      { description: '外国人永久居留身份证', count: '@integer(100, 500)' },\r\n      { description: '普通护照', count: '@integer(100, 500)' }\r\n    ]\r\n  }\r\n})\r\n\r\n/**\r\n * 获取我的应用数\r\n */\r\nconst getAppCount = (): Promise<TResponse> => {\r\n  return request.post(`${baseUrl}/user/getAppCount`)\r\n}\r\n\r\n/**\r\n * 获取我的应用列表\r\n */\r\nconst getMyAppList = (): Promise<TResponse> => {\r\n  return request.post(`${baseUrl}/user/getMyAppList`)\r\n}\r\n\r\n/**\r\n * 获取认证总量\r\n */\r\nconst getAmount = ({\r\n  startDate,\r\n  endDate\r\n}: {\r\n  startDate: string\r\n  endDate: string\r\n}): Promise<TResponse<TLineChart & { total: number }>> => {\r\n  return request.post(`${baseUrl}/user/getAmount`)\r\n}\r\n\r\nexport type TPercentage = {\r\n  success: number\r\n  fail: number\r\n  xAxis: (string | number)[]\r\n  yAxis: (string | number)[]\r\n}\r\n\r\n/**\r\n * 获取认证成功率\r\n */\r\nconst getPercentage = ({\r\n  startDate,\r\n  endDate\r\n}: {\r\n  startDate: string\r\n  endDate: string\r\n}): Promise<TResponse<TPercentage>> => {\r\n  return request.post(`${baseUrl}/user/getPercentage`)\r\n}\r\n\r\n/**\r\n * 获取各接入方式认证量分布\r\n */\r\nconst getDistribution = ({\r\n  startDate,\r\n  endDate\r\n}: {\r\n  startDate: string\r\n  endDate: string\r\n}): Promise<TResponse<TLineChart>> => {\r\n  return request.post(`${baseUrl}/user/getDistribution`)\r\n}\r\n\r\nexport type TCard = {\r\n  description: string\r\n  count: number\r\n}\r\n\r\n/**\r\n * 获取各证件类型认证量分布\r\n */\r\nconst getDistributionList = ({\r\n  startDate,\r\n  endDate\r\n}: {\r\n  startDate: string\r\n  endDate: string\r\n}): Promise<TResponse<{ list: TCard[] }>> => {\r\n  return request.post(`${baseUrl}/user/getDistributionList`)\r\n}\r\n\r\nexport {\r\n  mockData,\r\n  getAppCount,\r\n  getMyAppList,\r\n  getAmount,\r\n  getPercentage,\r\n  getDistribution,\r\n  getDistributionList\r\n}\r\n"],"names":["baseUrl","Mock","getAppCount","request","getMyAppList","getAmount","startDate","endDate","getPercentage","getDistribution","getDistributionList"],"mappings":"gFAEA,MAAMA,EAAU,0DAECC,EAAK,KAAK,CACzB,IAAK,GACL,QAAS,EACT,WAAY,uCACZ,KAAM,CACJ,KAAM,CACJ,CAAE,YAAa,mDAAY,MAAO,oBAAqB,EACvD,CAAE,YAAa,qEAAe,MAAO,oBAAqB,EAC1D,CAAE,YAAa,qEAAe,MAAO,oBAAqB,EAC1D,CAAE,YAAa,mDAAY,MAAO,oBAAqB,EACvD,CAAE,YAAa,+DAAc,MAAO,oBAAqB,EACzD,CAAE,YAAa,2BAAQ,MAAO,oBAAqB,CACrD,CACF,CACF,CAAC,EAKD,MAAMC,EAAc,IACXC,EAAQ,KAAK,GAAGH,oBAA0B,EAM7CI,EAAe,IACZD,EAAQ,KAAK,GAAGH,qBAA2B,EAM9CK,EAAY,CAAC,CACjB,UAAAC,EACA,QAAAC,CACF,IAISJ,EAAQ,KAAK,GAAGH,kBAAwB,EAa3CQ,EAAgB,CAAC,CACrB,UAAAF,EACA,QAAAC,CACF,IAISJ,EAAQ,KAAK,GAAGH,sBAA4B,EAM/CS,EAAkB,CAAC,CACvB,UAAAH,EACA,QAAAC,CACF,IAISJ,EAAQ,KAAK,GAAGH,wBAA8B,EAWjDU,EAAsB,CAAC,CAC3B,UAAAJ,EACA,QAAAC,CACF,IAISJ,EAAQ,KAAK,GAAGH,4BAAkC"}