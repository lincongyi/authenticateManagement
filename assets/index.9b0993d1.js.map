{"version":3,"file":"index.9b0993d1.js","sources":["../../src/pages/Register/Result/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport style from './index.module.scss'\r\nimport { Button, Form, Input, Result, Space, Upload, message } from 'antd'\r\nimport { ArrowLeftOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport type { RcFile } from 'antd/es/upload/interface'\r\nimport type { UploadRequestOption } from 'rc-upload/lib/interface'\r\nimport { getBase64, imgBeforeUpload } from '@utils/index'\r\nimport Header from '@components/Header'\r\nimport Area from '@components/Area'\r\nimport { ResultStatusType } from 'antd/es/result'\r\nimport { useStore } from '@stores/index'\r\nimport { hastenProcess, resubmitRegister } from '@api/register'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst RegisterResult = () => {\r\n  const navigate = useNavigate()\r\n  /**\r\n   * 返回\r\n   */\r\n  const onBack = () => navigate(-1)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 }\r\n  }\r\n\r\n  const { registerStore } = useStore()\r\n\r\n  // 账号注册申请结果\r\n  const { state: registerStatus } = registerStore.registerInfo\r\n\r\n  useEffect(() => {\r\n    if (registerStatus === -1) navigate(-1)\r\n  }, [])\r\n\r\n  const tipsList = [\r\n    { title: '审核通过', subTitle: '请跳转到登录页面进行登录' },\r\n    {\r\n      title: '提示',\r\n      subTitle:\r\n        '您账号注册申请的内容已提交给平台审核中，预计3个工作日内反馈结果会以短信和邮件的形式，发送到单位管理员手机号和邮箱中，请注意查收'\r\n    },\r\n    { title: '审核不通过', subTitle: '' }\r\n  ]\r\n  if (registerStatus === 2) {\r\n    const { comment } = registerStore.registerInfo\r\n    tipsList.at(-1)!.subTitle = comment // 驳回原因\r\n  }\r\n  const tips = registerStatus === 2 ? tipsList.at(-1) : tipsList[registerStatus]\r\n\r\n  const statusList = ['success', 'info', 'error']\r\n  const status =\r\n    registerStatus === 2 ? statusList.at(-1) : statusList[registerStatus]\r\n\r\n  /**\r\n   * 去登录\r\n   */\r\n  const toLogin = () => navigate('/login')\r\n\r\n  /**\r\n   * 催办\r\n   */\r\n  const toUrge = async () => {\r\n    const { processInstanceId } = registerStore.registerInfo\r\n    await hastenProcess({ instanceId: processInstanceId })\r\n    message.warning({\r\n      content: '催办信息已发送！5秒后自动关闭',\r\n      duration: 5,\r\n      onClose: () => {\r\n        navigate('/register/tour')\r\n      }\r\n    })\r\n  }\r\n\r\n  const backBtn = [\r\n    <Button key='back' onClick={onBack}>\r\n      返回\r\n    </Button>\r\n  ]\r\n  const extraList = [\r\n    [\r\n      <Button type='primary' key='login' onClick={toLogin}>\r\n        去登录\r\n      </Button>,\r\n      ...backBtn\r\n    ],\r\n    [\r\n      <Button type='primary' key='urge' onClick={toUrge}>\r\n        催办\r\n      </Button>,\r\n      ...backBtn\r\n    ],\r\n    []\r\n  ]\r\n  const extra =\r\n    registerStatus === 2 ? extraList.at(-1) : extraList[registerStatus]\r\n\r\n  const [certificateFile, setCertificateFile] = useState('')\r\n\r\n  /**\r\n   * 覆盖默认的上传行为\r\n   */\r\n  const customRequest = (options: UploadRequestOption) => {\r\n    new Promise((resolve: (value: string) => void) => {\r\n      getBase64(options.file as RcFile, url => {\r\n        resolve(url)\r\n      })\r\n    }).then(url => {\r\n      const imageBase64: string = url.substring(url.indexOf('base64,') + 7)\r\n      setCertificateFile(url)\r\n      form.setFieldValue('certificateFile', imageBase64)\r\n    })\r\n  }\r\n\r\n  const normFile = (e: any) => {\r\n    console.log('Upload event:', e)\r\n    if (Array.isArray(e)) {\r\n      return e\r\n    }\r\n    return e?.fileList\r\n  }\r\n\r\n  /**\r\n   * 提交\r\n   */\r\n  const onFinish = async (values: any) => {\r\n    const { state, comment, processInstanceId, ...rest } =\r\n      registerStore.registerInfo\r\n    const { retMessage } = await resubmitRegister({\r\n      ...values,\r\n      ...rest,\r\n      ...{ instanceId: processInstanceId }\r\n    })\r\n    message.success({\r\n      content: retMessage,\r\n      onClose: () => {\r\n        registerStore.setRegisterInfo({\r\n          taskId: '',\r\n          state: 1,\r\n          processInstanceId: '',\r\n          starter: '',\r\n          comment: ''\r\n        })\r\n      }\r\n    })\r\n  }\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(errorInfo)\r\n  }\r\n\r\n  /**\r\n   * 重置\r\n   */\r\n  const onReset = () => {\r\n    form.resetFields()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {registerStatus !== -1 && (\r\n        <>\r\n          <Header isLogin={false} />\r\n          <div className='gray-bg'>\r\n            <div className={style.content}>\r\n              <div className={style['back-column']}>\r\n                <div className={style['back-btn']} onClick={onBack}>\r\n                  <Space>\r\n                    <ArrowLeftOutlined style={{ color: '#999' }} />\r\n                    返回\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n              <div className={style['result-box']}>\r\n                <Result\r\n                  status={status as ResultStatusType}\r\n                  title={tips!.title}\r\n                  subTitle={tips!.subTitle}\r\n                  extra={extra}\r\n                />\r\n              </div>\r\n              {registerStatus === 2 && (\r\n                <div className={style['register-box']}>\r\n                  <Form\r\n                    form={form}\r\n                    name='register'\r\n                    {...layout}\r\n                    colon={false}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete='off'\r\n                  >\r\n                    <Form.Item\r\n                      name='companyName'\r\n                      label='单位名称'\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input showCount maxLength={20} />\r\n                    </Form.Item>\r\n                    <Form.Item name='companyShortName' label='单位简称'>\r\n                      <Input showCount maxLength={10} />\r\n                    </Form.Item>\r\n                    <Form.Item name='certificateNum' label='统一信用代码'>\r\n                      <Input showCount maxLength={20} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name='certificateFile'\r\n                      label='信用代码证书'\r\n                      valuePropName='certificateFile'\r\n                      getValueFromEvent={normFile}\r\n                    >\r\n                      <Upload\r\n                        listType='picture-card'\r\n                        maxCount={1}\r\n                        showUploadList={false}\r\n                        beforeUpload={imgBeforeUpload}\r\n                        customRequest={customRequest}\r\n                      >\r\n                        {certificateFile ? (\r\n                          <img\r\n                            src={certificateFile}\r\n                            alt='avatar'\r\n                            style={{ maxWidth: '100%', maxHeight: '100%' }}\r\n                          />\r\n                        ) : (\r\n                          <div>\r\n                            <PlusOutlined />\r\n                            <div style={{ marginTop: 8 }}>选择图片</div>\r\n                          </div>\r\n                        )}\r\n                      </Upload>\r\n                    </Form.Item>\r\n                    <Form.Item name='areaCode' label='接入地区'>\r\n                      <Area\r\n                        callback={(code: number) =>\r\n                          form.setFieldValue('areaCode', code)\r\n                        }\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\r\n                      <Space>\r\n                        <Button onClick={onReset}>重置</Button>\r\n                        <Button type='primary' htmlType='submit'>\r\n                          提交\r\n                        </Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(RegisterResult)\r\n"],"names":["RegisterResult","navigate","useNavigate","onBack","form","Form","useForm","layout","labelCol","span","wrapperCol","registerStore","useStore","state","registerStatus","registerInfo","useEffect","tipsList","title","subTitle","comment","at","tips","statusList","status","toLogin","toUrge","processInstanceId","hastenProcess","instanceId","message","warning","content","duration","onClose","backBtn","_jsx","Button","extraList","extra","certificateFile","setCertificateFile","useState","customRequest","options","Promise","resolve","file","url","then","imageBase64","substring","indexOf","setFieldValue","normFile","e","log","Array","isArray","fileList","onFinish","values","rest","retMessage","resubmitRegister","success","setRegisterInfo","taskId","starter","onFinishFailed","errorInfo","console","onReset","resetFields","_Fragment","_jsxs","Header","style","Space","ArrowLeftOutlined","color","Result","required","Input","Upload","imgBeforeUpload","maxWidth","maxHeight","PlusOutlined","marginTop","Area","code","offset","observer"],"mappings":"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"}