{"version":3,"file":"SettingsModal.535d87ea.js","sources":["../../src/pages/Issues/Daily/components/SettingsModal.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Row,\r\n  Select,\r\n  Space\r\n} from 'antd'\r\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox'\r\nimport type { CheckboxValueType } from 'antd/es/checkbox/Group'\r\nimport style from './index.module.scss'\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nconst options = [\r\n  '南沙分局微信小程序',\r\n  '南沙分局支付宝小程序',\r\n  '陕西分局微信小程序',\r\n  '陕西分局支付宝小程序'\r\n]\r\nconst defaultCheckedList = [options[1], options[2]]\r\n\r\nconst SettingsModal = ({\r\n  open,\r\n  setOpen\r\n}: {\r\n  open: boolean\r\n  setOpen: Function\r\n}) => {\r\n  const [form] = Form.useForm()\r\n\r\n  const [checkedList, setCheckedList] =\r\n    useState<CheckboxValueType[]>(defaultCheckedList)\r\n  const [checkAll, setCheckAll] = useState(false)\r\n  /**\r\n   * 全选\r\n   */\r\n  const onCheckAllChange = (e: CheckboxChangeEvent) => {\r\n    const { checked } = e.target\r\n    const list = checked ? options : []\r\n    setCheckedList(list)\r\n    form.setFieldValue('relavance', list)\r\n    setCheckAll(checked)\r\n  }\r\n\r\n  /**\r\n   * 单选\r\n   */\r\n  const onChange = (list: CheckboxValueType[]) => {\r\n    setCheckedList(list)\r\n    setCheckAll(list.length === options.length)\r\n  }\r\n\r\n  type TList = {\r\n    classification: string\r\n    order: string\r\n  }\r\n  /**\r\n   * 动态表单\r\n   */\r\n  useEffect(() => {\r\n    const list: TList[] | [] = Array(checkedList.length).fill({\r\n      classification: '',\r\n      order: ''\r\n    })\r\n    form.setFieldValue('apps', list)\r\n  }, [checkedList])\r\n\r\n  const classificationOptions = [\r\n    { value: 0, label: '其他' },\r\n    { value: 1, label: '注册' },\r\n    { value: 2, label: '登录' }\r\n  ]\r\n\r\n  /**\r\n   * 关闭\r\n   */\r\n  const onCancel = () => {\r\n    form.resetFields()\r\n    setOpen(false)\r\n  }\r\n\r\n  /**\r\n   * 提交数据\r\n   */\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values)\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title='请设置显示规则'\r\n      open={open}\r\n      width={640}\r\n      forceRender={true}\r\n      onCancel={onCancel}\r\n      footer={[]}\r\n    >\r\n      <Divider />\r\n      <Form\r\n        form={form}\r\n        name='settings'\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 18 }}\r\n        initialValues={{\r\n          relavance: defaultCheckedList\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item label='关联至应用名称' required labelCol={{ span: 24 }}>\r\n          <>\r\n            <Checkbox onChange={onCheckAllChange} checked={checkAll}>\r\n              全选\r\n            </Checkbox>\r\n\r\n            <div className={`${style['checkbox-group']} gray-bg`}>\r\n              <Form.Item\r\n                name='relavance'\r\n                rules={[\r\n                  { required: true, message: '至少需要选择一项关联应用' }\r\n                ]}\r\n              >\r\n                <CheckboxGroup onChange={onChange}>\r\n                  <Row gutter={[0, 20]}>\r\n                    {options.map(item => (\r\n                      <Col span={12} key={item}>\r\n                        <Checkbox value={item}>{item}</Checkbox>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </CheckboxGroup>\r\n              </Form.Item>\r\n            </div>\r\n          </>\r\n        </Form.Item>\r\n        {!!checkedList.length && (\r\n          <div className={`${style['setting-rule']} gray-bg`}>\r\n            <div className={style['setting-item']}>\r\n              <Form.List name='apps'>\r\n                {fields => (\r\n                  <>\r\n                    {fields.map(({ key, name, ...restField }, index) => (\r\n                      <React.Fragment key={key}>\r\n                        <div className={`${style.title} font-primary-color`}>\r\n                          {index + 1}.已选中：{checkedList[index]}\r\n                        </div>\r\n                        <Row className={style['selected-item']}>\r\n                          <Col span={24}>\r\n                            <Form.Item\r\n                              label='对应应用问题分类'\r\n                              name={[name, 'classification']}\r\n                              {...restField}\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请选择应用问题分类'\r\n                                }\r\n                              ]}\r\n                            >\r\n                              <Select options={classificationOptions} />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={24}>\r\n                            <Form.Item\r\n                              label='排序'\r\n                              name={[name, 'order']}\r\n                              {...restField}\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入排序'\r\n                                }\r\n                              ]}\r\n                              extra='从1-N进行排序，数字越大显示越后，如果设置了同样的数值，则按最新设置的时间进行排序'\r\n                            >\r\n                              <Input placeholder='请输入排序' maxLength={3} />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <Divider />\r\n        <Form.Item noStyle wrapperCol={{ span: 24 }}>\r\n          <Row>\r\n            <Col span={24} className='tr'>\r\n              <Space>\r\n                <Button onClick={onCancel}>取消</Button>,\r\n                <Button type='primary' htmlType='submit'>\r\n                  确定\r\n                </Button>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n"],"names":["CheckboxGroup","Checkbox","Group","options","defaultCheckedList","SettingsModal","open","setOpen","form","Form","useForm","checkedList","setCheckedList","useState","checkAll","setCheckAll","onCheckAllChange","e","checked","target","list","setFieldValue","onChange","length","useEffect","Array","fill","classification","order","classificationOptions","value","label","onCancel","resetFields","Modal","_jsx","Divider","span","relavance","values","log","errorInfo","_Fragment","style","required","message","Row","map","item","Col","fields","key","name","restField","index","_jsxs","React","title","Select","Input","Space","Button"],"mappings":"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"}