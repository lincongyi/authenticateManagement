{"version":3,"file":"Password.96a90ecc.js","sources":["../../src/pages/MyAccount/AccountSettings/components/Password.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button, Form, Input, Space, message } from 'antd'\r\nimport { passwordPattern } from '@utils/index'\r\nimport { currentResetPassword } from '@api/myAccount'\r\n\r\nconst Password = ({\r\n  onNext,\r\n  onPrev,\r\n  resetParams\r\n}: {\r\n  onNext: Function\r\n  onPrev: Function\r\n  resetParams: TResetParams\r\n}) => {\r\n  /* eslint-disable no-template-curly-in-string */\r\n  const validateMessages = {\r\n    required: '请输入${label}'\r\n  }\r\n  /* eslint-disable no-template-curly-in-string */\r\n\r\n  /**\r\n   * 提交数据\r\n   */\r\n  const onFinish = async (values: any) => {\r\n    const { type, ...rest } = resetParams\r\n    const { retMessage } = await currentResetPassword({ ...rest, ...values })\r\n    message.success({\r\n      content: retMessage,\r\n      duration: 2,\r\n      onClose () {\r\n        onNext({ ...resetParams, ...values })\r\n      }\r\n    })\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('resetParams', resetParams)\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name='password'\r\n      layout='vertical'\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      validateMessages={validateMessages}\r\n      autoComplete='off'\r\n    >\r\n      <Form.Item\r\n        label='新密码'\r\n        name='password'\r\n        rules={[\r\n          { required: true },\r\n          {\r\n            validator (_, value) {\r\n              const pattern = passwordPattern\r\n              if (!value || pattern.test(value)) {\r\n                return Promise.resolve()\r\n              }\r\n              return Promise.reject(new Error('密码格式有误，请重新确认'))\r\n            }\r\n          }\r\n        ]}\r\n        extra='平台登录密码，密码必须包含数字、小写字母、大写字母、特殊符号其中的三种及以上，至少8个字符'\r\n      >\r\n        <Input.Password placeholder='请输入密码' maxLength={20} showCount />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='确认密码'\r\n        name='confirmPassword'\r\n        rules={[\r\n          { required: true },\r\n          ({ getFieldValue }) => ({\r\n            validator (_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve()\r\n              }\r\n              return Promise.reject(new Error('两次密码不一致请重新确认'))\r\n            }\r\n          })\r\n        ]}\r\n      >\r\n        <Input.Password placeholder='请再次输入密码' maxLength={20} showCount />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Space>\r\n          <Button onClick={() => onPrev()}>上一步</Button>\r\n          <Button type='primary' htmlType='submit'>\r\n            下一步\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Password\r\n"],"names":["Password","onNext","onPrev","resetParams","Form","values","type","rest","retMessage","currentResetPassword","message","success","content","duration","onClose","errorInfo","log","required","_jsx","validator","_","value","passwordPattern","test","Promise","resolve","reject","Error","Input","getFieldValue","Space","Button"],"mappings":"wIAKA,MAAMA,EAAW,CAAC,CAChBC,OAAAA,EACAC,OAAAA,EACAC,YAAAA,CAKF,MA4BKC,EAAI,CACH,KAAK,WACL,OAAO,WACP,SArBa,MAAOC,GAAgB,CAChC,KAAA,CAAEC,KAAAA,KAASC,CAASJ,EAAAA,EACpB,CAAEK,WAAAA,CAAW,EAAI,MAAMC,EAAqB,CAAE,GAAGF,EAAM,GAAGF,CAAAA,CAAQ,EACxEK,EAAQC,QAAQ,CACdC,QAASJ,EACTK,SAAU,EACVC,SAAW,CACFb,EAAA,CAAE,GAAGE,EAAa,GAAGE,CAAAA,CAAQ,CACtC,CAAA,CACD,CAAA,EAaC,eAVoBU,GAAmB,CACjCC,QAAAA,IAAI,cAAeb,CAAW,EAC9Ba,QAAAA,IAAI,UAAWD,CAAS,CAAA,EAS9B,iBA/BqB,CACvBE,SAAU,4BAAA,EA+BR,aAAa,MAAK,SAElB,CAACC,EAAAd,EAAK,KAAI,CACR,MAAM,qBACN,KAAK,WACL,MAAO,CACL,CAAEa,SAAU,EAAA,EACZ,CACEE,UAAWC,EAAGC,EAAO,CAEnB,MAAI,CAACA,GADWC,EACMC,KAAKF,CAAK,EACvBG,QAAQC,UAEVD,QAAQE,OAAO,IAAIC,MAAM,0EAAc,CAAC,CACjD,CAAA,CACD,EAEH,MAAM,4QAA+C,SAEpDT,EAAAU,EAAM,SAAQ,CAAC,YAAY,iCAAQ,UAAW,GAAI,UAAS,EAAA,CAAA,CAAA,CAAG,EAEhEV,EAAAd,EAAK,KAAI,CACR,MAAM,2BACN,KAAK,kBACL,MAAO,CACL,CAAEa,SAAU,EAAA,EACZ,CAAC,CAAEY,cAAAA,CAAAA,KAAqB,CACtBV,UAAWC,EAAGC,EAAO,CACnB,MAAI,CAACA,GAASQ,EAAc,UAAU,IAAMR,EACnCG,QAAQC,UAEVD,QAAQE,OAAO,IAAIC,MAAM,0EAAc,CAAC,CACjD,CAAA,EACA,EACF,SAEDT,EAAAU,EAAM,SAAQ,CAAC,YAAY,6CAAU,UAAW,GAAI,UAAS,EAAA,CAAA,CAAA,CAAG,EAElEV,EAAAd,EAAK,KAAI,CAAA,WACP0B,EAAK,CAAA,SAAA,CACJZ,EAACa,EAAM,CAAC,QAAS,IAAM7B,EAAS,EAAA,SAAA,oBAAA,CAAa,EAC7CgB,EAACa,EAAM,CAAC,KAAK,UAAU,SAAS,SAAQ,SAAA,oBAAA,CAE/B,CAAA,CAAA,CAAA,CAAA,CAED,CAAA,CAAA,CACP"}